version: '3.8'

services:
  # Base de datos PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: arman-travel-db
    environment:
      - POSTGRES_DB=arman_travel
      - POSTGRES_USER=arman_user
      - POSTGRES_PASSWORD=arman_password_2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - arman-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U arman_user -d arman_travel"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API con FastAPI
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: arman-travel-api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://arman_user:arman_password_2024@db:5432/arman_travel
      - SECRET_KEY=${SECRET_KEY:-arman-secret-key-super-secure-2024}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
    volumes:
      - ./backend:/app
      - ./frontend:/app/frontend
    depends_on:
      db:
        condition: service_healthy
    networks:
      - arman-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx para servir archivos estáticos (opcional, para producción)
  nginx:
    image: nginx:alpine
    container_name: arman-travel-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend:/usr/share/nginx/html:ro
    depends_on:
      - api
    networks:
      - arman-network
    restart: unless-stopped

networks:
  arman-network:
    driver: bridge

volumes:
  postgres_data: